<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- StringPrinter 클래스를 Spring Bean으로 설정 -->
	<!-- StringPrinter strPrinter = new StringPrinter(); // (생성자 호출) -->
	<!-- 스프링 컨테이너가 new StringPrinter()로 객체를 한번 만들어서 미리 관리하고, scope 기본값(singleton)이라 필요할 때마다 이 객체를 계속 재사용함 -->
	<bean id="strPrinter" class="myspring.di.xml.StringPrinter" />
	
	<!-- ConsolePrinter 클래스를 Spring Bean으로 설정 -->
	<!-- ConsolePrinter conPrinter = new ConsolePrinter(); // (생성자 호출) -->
	<!-- 스프링 컨테이너가 new ConsolePrinter()로 객체를 한번 만들어서 미리 관리하고, scope 기본값(singleton)이라 필요할 때마다 이 객체를 계속 재사용함 -->
	<bean id="conPrinter" class="myspring.di.xml.ConsolePrinter" />
	
	
	
	<!--Hello 클래스를 Spring Bean으로 설정 Setter Injection 방식 
		개별로 설정하는 것 한꺼번에 하는건 Constructor Injection임 
		참조하는 변수가 있어서 다른 방법으로 ㄱㄱ -->
	<!-- Hello hello = new Hello(); // 기본 생성자 호출 -->
	<!-- bean 태그 속성인 scope의 singleton 패턴은 Default 값임	
		//singleton 패턴은 어떤 인스턴스를 만들던 같은 인스턴스라 침	
		// bean을 사용할 때 마다 다른 인스턴스로 만들고싶으면 scope="prototype"으로 설정-->
	<bean id="hello" class="myspring.di.xml.Hello" scope="singleton"> 
		<!-- hello.setName("스프링"); // setter 메서드 사용 -->
		<!-- setter 메서드에서 set을 빼고 앞 글자를 소문자로 바꾸고 name에 대입하기 -->
		<!-- <property name="name" value="스프링" /> --> <!-- xml에서도 values.properties 치환자 사용 가능함 -->
		<property name="name" value="${myName1}" />	<!-- 값타입은 value -->
		<!-- 이거도 마찬가지로 hello.setPrinter(strPrinter) -->
		<property name="printer" ref="strPrinter" /> <!-- 참조타입은 ref -->
	</bean>



	<!--Hello 클래스를 Spring Bean으로 설정 Constructor Injection 방식 -->
	<bean id="helloC" class="myspring.di.xml.Hello">
		<constructor-arg index="0" value="생성자" />
		<constructor-arg index="1" ref="conPrinter" />
		<property name="names">
			<list>
				<value>스프링프레임워크</value>
				<value>스프링부트</value>
				<value>스프링클라우드</value>
			</list>
		</property>
	</bean>	
	
	
	<!-- Auto Component Scanning 설정 --> <!-- myspring.di.annot 패키지 내부 설정하기 -->
	<context:component-scan base-package="myspring.di.annot" />
	
	<!-- values.properties 파일의 정보 설정 -->
	<context:property-placeholder location="classpath:values.properties" />
	
</beans>
